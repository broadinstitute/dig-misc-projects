


- node types and properties
CALL db.schema.nodeTypeProperties() 
YIELD nodeType, propertyName
RETURN nodeType AS Label, collect(propertyName) AS Properties
ORDER BY Label


- edge types and properties
MATCH ()-[r]->()
WITH type(r) AS relationshipType, collect(DISTINCT keys(r)) AS propertyKeys
UNWIND propertyKeys AS flattened
WITH relationshipType, collect(DISTINCT flattened) AS Properties
RETURN relationshipType AS Label, Properties
ORDER BY Label


- count nodes by type
MATCH (n)
WITH labels(n) AS nodeLabels, count(n) AS nodeCount
UNWIND nodeLabels AS label
WITH label, sum(nodeCount) AS count
RETURN label, count
ORDER BY label



-- get all edges by type
MATCH (a:Gene)-[r:FACTOR_GENE]-(b:Factor)
RETURN id(a) as source_id, properties(a) as source_props,
        id(b) as target_id, properties(b) as target_props,
        properties(r) as edge_props
limit 25

MATCH (a:Gene)-[r:FACTOR_GENE]-(b:Factor)
RETURN id(a) as neo4j_sid, a.id as source_id,
        id(b) as neo4j_tid, b.id as target_id,
        r.weight as weight
limit 25
